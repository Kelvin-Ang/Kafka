
version: "3"

services:

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "PLAINTEXT://kafka:9092"
    networks:
        - app-tier
    depends_on:
      - "kafka"

  test_api:
    build:
      context: ./test-api
      dockerfile: Dockerfile
    networks:
        - app-tier
    ports:
      - 15555:15555

  producer_api:
    build:
      context: ./producer-api
      dockerfile: Dockerfile
    networks:
        - app-tier
    ports:
      - 15556:15556
    depends_on:
      - "kafka"

  consumer-worker:
    build:
      context: ./consumer-worker
      dockerfile: Dockerfile
    networks:
        - app-tier
    ports:
      - 15557:15557
    depends_on:
      - "kafka"

  kafka:
      image: 'bitnami/kafka:latest'
      networks:
        - app-tier
      environment:
        - KAFKA_CFG_NODE_ID=0
        - KAFKA_CFG_PROCESS_ROLES=controller,broker
        - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@<your_host>:9093
        - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
        - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
        - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
        - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      ports:
        - '9092:9092'
        - '9094:9094'

networks:
  app-tier:
    driver: bridge